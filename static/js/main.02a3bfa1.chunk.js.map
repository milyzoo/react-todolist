{"version":3,"sources":["images/clear.svg","images/delete.svg","images/edit.svg","components/TodoItem.js","components/TodoList.js","components/GlobalStyle.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","styled","div","TodoItemContent","TodoItemText","label","props","$isDone","TodoCheckbox","TodoButtonWrapper","Button","button","ModalWrapper","$modalIsOpen","ModalBackground","Modal","CloseModalButton","ModalInfo","ModalContent","input","ModalDoneButton","SingleTodoItem","todo","handleDeleteTodo","handleToggleIsDone","modalIsOpen","handleModalClose","handelModalOpen","onClick","$data-todo-id","id","isDone","content","src","EditImg","alt","DeleteImg","TodoListWrapper","FilterWrapper","FilterButton","TodoItemInfo","UncompletedCount","span","ClearButton","TodoItemWrapper","TodoItemInputField","TodoItemTextField","AddButton","TodoList","useState","todos","setTodos","value","setValue","filter","setFilter","setModalIsOpen","useRef","SendTodoContent","e","current","map","clearImg","type","placeholder","onChange","target","onKeyDown","keyCode","GlobalCSS","createGlobalStyle","GlobalStyle","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02a3bfa1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/clear.32466c17.svg\";","export default __webpack_public_path__ + \"static/media/delete.89150e53.svg\";","export default __webpack_public_path__ + \"static/media/edit.5428aee9.svg\";","import styled from 'styled-components';\nimport DeleteImg from '../images/delete.svg'\nimport EditImg from '../images/edit.svg'\n\nconst TodoItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 45px;\n  transition: 0.3s;\n\n  &:hover {\n    background-color: #F6F6F6;\n  }\n  &:hover Button{\n    opacity: 1;\n  }\n`\nconst TodoItemContent = styled.div`\n  display: flex;\n  align-items: center;\n  width: calc(100% - 52px);\n  height: 100%;\n  color: #555555;\n`\nconst TodoItemText = styled.label`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  transition: 0.3s;\n\n  input {\n    margin-right: 15px;\n  }\n\n  ${props => props.$isDone && `\n    text-decoration: line-through;\n    color: #E1E1E1;\n  `}\n`\nconst TodoCheckbox = styled.div`\n  position: relative;\n  margin-right: 20px;\n  height: 10px;\n  width: 10px;\n  border: 1px solid #BBBBBB;\n  border-radius: 50%;\n  transition: 0.3s;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    left: 0.5px;\n    bottom: 4px;\n    transform: rotate(-50deg);\n    width: 15px;\n    height: 2px;\n    background-color: #858585;\n    opacity: 0;\n    transition: 0.3s;\n  }\n  &::after {\n    content: \"\";\n    position: absolute;\n    left: -2px;\n    bottom: 2px;\n    transform: rotate(45deg);\n    width: 7px;\n    height: 2px;\n    background-color: #858585;\n    opacity: 0;\n    transition: 0.3s;\n  }\n  ${props => props.$isDone && `\n    border: 1px solid transparent;\n\n    &::before {\n      opacity: 1;\n    }\n    \n    &::after {\n      opacity: 1;\n    }\n  `}\n`\nconst TodoButtonWrapper = styled.div`\n  display: flex;\n`\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 16px;\n  height: 16px;\n  outline: none;\n  border: transparent;\n  background-color: transparent;\n  opacity: 0;\n  transition: 0.3s;\n  cursor: pointer;\n\n  img {\n    width: 16px;\n    height: 16px;\n  }\n\n  & + & {\n    margin-left: 20px;\n  }\n`\nconst ModalWrapper = styled.div`\n  z-index: 1;\n\n  ${props => props.$modalIsOpen ? `display: block;` : `display: none;`}\n`\nconst ModalBackground = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.2);\n`\nconst Modal = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 30px;\n  box-sizing: border-box;\n  width: 100%;\n  max-width: 300px;\n  height: 130px;\n  background-color: #fff;\n`\nconst CloseModalButton = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 15px;\n  height: 15px;\n  cursor: pointer;\n  &::before {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) rotate(-45deg);\n    width: 3px;\n    height: 15px;\n    background-color: #000;\n  }\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) rotate(45deg);\n    width: 3px;\n    height: 15px;\n    background-color: #000;\n  }\n`\nconst ModalInfo = styled.div`\n  display: flex;\n  width: 100%;\n`\nconst ModalContent = styled.input`\n  margin-right: 15px;\n  padding: 5px;\n  width: calc(100% - 50px);\n  border: transparent;\n  border-bottom: 1px solid #000;\n  outline: none;\n  font-size: 20px;\n`\nconst ModalDoneButton = styled.button`\n  width: 80px;\n  border: 1px solid #858585;\n  border-radius: 20px;\n  background-color: transparent;\n  font-size: 16px;\n  outline: none;\n  cursor: pointer;\n  transition: 0.3s;\n\n  &:hover {    \n    background-color: #E3E3E3;\n  }\n`\n\nexport default function SingleTodoItem({ todo, handleDeleteTodo, handleToggleIsDone, modalIsOpen, handleModalClose, handelModalOpen }) {\n  const handleToggleClick = () => {\n    handleToggleIsDone(todo.id)\n  }\n\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id)\n  }\n\n  const handleEditClick = () => {\n    handelModalOpen()\n  }\n\n  const handleCloseEdit = () => {\n    handleModalClose()\n  }\n\n  return (\n    <TodoItem>\n      <ModalWrapper $modalIsOpen={modalIsOpen}>\n        <ModalBackground />\n        <Modal>\n          <CloseModalButton onClick={handleCloseEdit} />\n          <ModalInfo>\n            <ModalContent ></ModalContent>\n            <ModalDoneButton>確定</ModalDoneButton>\n          </ModalInfo>\n        </Modal>\n      </ModalWrapper>\n      <TodoItemContent $data-todo-id={todo.id}>        \n        <TodoItemText $isDone={todo.isDone} onClick={handleToggleClick}>\n          <TodoCheckbox $isDone={todo.isDone} />\n          <p>{todo.content}</p>          \n        </TodoItemText>\n      </TodoItemContent>\n      <TodoButtonWrapper>\n        <Button onClick={handleEditClick}><img src={EditImg} alt=\"\"/></Button>\n        <Button onClick={handleDeleteClick}><img src={DeleteImg} alt=\"\"/></Button>\n      </TodoButtonWrapper>\n    </TodoItem>\n  )\n}","import styled from 'styled-components';\nimport clearImg from '../images/clear.svg'\nimport { useState, useRef } from 'react';\nimport SingleTodoItem from './TodoItem'\n\nconst TodoListWrapper = styled.div`\n  margin: 100px auto 0 auto;\n  width: 100%;\n  max-width: 550px;\n  background-color: #fff;\n  box-shadow: 0 0 50px rgba(135, 135, 135, 0.1);\n`\nconst FilterWrapper = styled.div`\n  display: flex;\n`\nconst FilterButton = styled.div`\n  width: calc(100% / 3);\n  line-height: 50px;\n  text-align: center;\n  color: #555555;\n  background-color: #F9F9F9;\n  transition: 0.3s;\n  cursor: pointer;\n\n  & + & {\n    border-left: 1px solid #ECECEC;\n    border-bottom: 1px solid #ECECEC;\n  }\n\n  &:hover {\n    background-color: #ffffff;\n  }\n`\nconst TodoItemInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 45px;\n  height: 75px;\n  font-size: 15px;\n  color: #858585;\n`\nconst UncompletedCount = styled.span`\n  margin-right: 5px;\n`\nconst ClearButton = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 5px 10px;\n  border: 1px solid #E1E1E1;\n  border-radius: 30px;\n  cursor: pointer;\n  transition: 0.3s;\n\n  &:hover {\n    background-color: #F9F9F9;\n  }\n\n  img {\n    margin-right: 5px;\n    width: 15px;\n    height: 15px;\n  }\n`\nconst TodoItemWrapper = styled.div`\n  max-height: 260px;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n  width: 10px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #E3E3E3;\n    border-radius: 20px;\n  }\n`\nconst TodoItemInputField = styled.div`\n  display: flex;\n  border-top: 1px solid #ECECEC;\n`\nconst TodoItemTextField = styled.input`\n  padding: 0 25px;\n  width: calc(100% - 60px);\n  border: transparent;\n  outline: none;\n  font-size: 20px;\n  color: #555555;\n\n  ::placeholder {\n    font-size: 20px;\n    color: #DCDCDC;\n  }\n`\nconst AddButton = styled.button`\n  width: 60px;\n  height: 60px;\n  border: transparent;\n  border-left: 1px solid #ECECEC;\n  background-color: transparent;\n  color: #555555;\n  font-family: 'Microsoft JhengHei';\n  font-size: 30px;\n  outline: none;\n  cursor: pointer;\n  transition: 0.3s;\n\n  &:hover {\n    background-color: #F9F9F9;\n  }\n`\n\nexport default function TodoList() {\n  const [todos, setTodos] = useState([\n    {id: 1, content: 'test content', isDone: true}, // 內建第一筆資料\n    {id: 2, content: '未完成', isDone: false} // 內建第二筆資料\n  ])\n  const [value, setValue] = useState('')\n  const [filter, setFilter] = useState('all');\n  const [modalIsOpen, setModalIsOpen] = useState(false)\n\n  let id = useRef(3) // 已經有內建 id: 2，所以初始值要從 3 開始\n\n  function SendTodoContent(e) {\n    if (!value) return // 未輸入文字就不能送出\n    setTodos([\n      {\n        id: id.current,\n        content: value\n      }, ...todos\n    ])\n    setValue('')  // 做完就清空 setValue\n    id.current++\n  }\n  const handleButtonClick = (e) => SendTodoContent(e)\n  const handleInputKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      SendTodoContent()\n    }\n  }\n  \n  const handleInputChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id)) \n    // filter 只會留下符合條件的東西，而 todo.id 一定等於 id，這代表不會留下任何東西，即可達成刪除功能\n  }\n\n  const handleToggleIsDone = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo // 如果這個 todo 不是要修改的 todo id 就回傳原本的 todo\n\n      // 進入這一行就代表是要修改的 todo.id\n      // 回傳原本的東西（...todo）+ 要修改的屬性（isDone: !todo.isDone）\n      return {\n        ...todo,\n        isDone: !todo.isDone\n      } \n    }))\n  }\n\n  const filterAllTodo = () => setFilter('all');\n  const filterUncompeletedTodo = () => setFilter('uncomplete');\n  const filterDoneTodo = () => setFilter('done');\n\n  const clearDoneTodo = () => {\n    setTodos(\n      todos.filter(todo => todo.isDone !== true)\n    ) \n  };\n\n  const handleModalClose = () => {\n    setModalIsOpen(false)\n  }\n\n  const handelModalOpen = () => {\n    setModalIsOpen(true)\n  }\n\n  return (\n    <TodoListWrapper>\n      <FilterWrapper>\n        <FilterButton onClick={filterAllTodo}>全部</FilterButton>\n        <FilterButton onClick={filterUncompeletedTodo}>未完成</FilterButton>\n        <FilterButton onClick={filterDoneTodo}>已完成</FilterButton>\n      </FilterWrapper>\n      <TodoItemInfo>\n        <p><UncompletedCount>0</UncompletedCount>個未完成</p>\n        <ClearButton onClick={clearDoneTodo}><img src={clearImg} alt=\"\"/>移除已完成事項</ClearButton>\n      </TodoItemInfo>\n      <TodoItemWrapper>\n        {\n          todos.filter(todo => {\n            if (filter === 'all') return todo\n            if (filter === 'uncomplete') return !todo.isDone\n            return todo.isDone\n          }).map(todo => (\n            <SingleTodoItem \n              key={todo.id} \n              todo={todo}\n              modalIsOpen={modalIsOpen}\n              handelModalOpen={handelModalOpen}\n              handleModalClose={handleModalClose}\n              handleDeleteTodo={handleDeleteTodo} \n              handleToggleIsDone={handleToggleIsDone}\n            />\n          ))\n        }\n      </TodoItemWrapper>\n      <TodoItemInputField>\n        <TodoItemTextField type=\"text\" placeholder=\"Add something to do here?\" value={value} onChange={handleInputChange} onKeyDown={handleInputKeyDown} />\n        <AddButton onClick={handleButtonClick}>+</AddButton>\n      </TodoItemInputField>\n    </TodoListWrapper>\n  );\n}\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalCSS = createGlobalStyle`\n  body {\n    background-color: #EFF4F6;\n    font-family: 'Microsoft JhengHei';\n  }\n  p {\n    margin: 0;\n  }\n`\n\nexport default function GlobalStyle() {\n  return (\n    <GlobalCSS />\n  );\n}","import React from 'react'\nimport TodoList from './components/TodoList'\nimport GlobalStyle from './components/GlobalStyle'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}