{"version":3,"sources":["images/clear.svg","images/delete.svg","components/TodoItem.js","components/TodoList.js","components/GlobalStyle.js","components/App.js","reportWebVitals.js","index.js"],"names":["TodoItem","styled","li","TodoItemContent","div","TodoItemText","label","props","$isDone","TodoCheckbox","TodoContent","p","TodoButtonWrapper","Button","button","SingleTodoItem","todo","handleDeleteTodo","handleToggleIsDone","data-todo-id","id","isDone","onClick","content","src","DeleteImg","alt","TodoListWrapper","section","FilterWrapper","FilterButton","$isActive","TodoItemInfo","UncompletedCount","span","ClearButton","TodoItemWrapper","ul","TodoItemInputField","TodoItemTextField","input","AddButton","TodoList","useState","todos","setTodos","value","setValue","currentFilter","setCurrentFilter","useRef","uncompleteCount","filter","length","SendTodoContent","current","map","filterTodos","useMemo","clearImg","type","placeholder","onChange","e","target","onKeyDown","keyCode","GlobalCSS","createGlobalStyle","GlobalStyle","Wrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAAe,MAA0B,kCCA1B,MAA0B,mC,OCInCA,EAAWC,IAAOC,GAAV,mPAeRC,EAAkBF,IAAOG,IAAV,uIAQfC,EAAeJ,IAAOK,MAAV,oMAYd,SAACC,GAAD,OACAA,EAAMC,SAAN,mEAOEC,EAAeR,IAAOG,IAAV,wpBAiCd,SAACG,GAAD,OACAA,EAAMC,SAAN,2IAcEE,EAAcT,IAAOU,EAAV,oFAKXC,EAAoBX,IAAOG,IAAV,8CAIjBS,EAASZ,IAAOa,OAAV,waA2BG,SAASC,EAAT,GAIX,IAHFC,EAGC,EAHDA,KACAC,EAEC,EAFDA,iBACAC,EACC,EADDA,mBAUA,OACE,eAAClB,EAAD,CAAUmB,eAAcH,EAAKI,GAA7B,UACE,cAACjB,EAAD,UACE,eAACE,EAAD,CAAcG,QAASQ,EAAKK,OAAQC,QAXhB,WACxBJ,EAAmBF,EAAKI,KAUpB,UACE,cAACX,EAAD,CAAcD,QAASQ,EAAKK,SAC5B,cAACX,EAAD,UAAcM,EAAKO,eAGvB,cAACX,EAAD,UACE,cAACC,EAAD,CAAQS,QAbY,WACxBL,EAAiBD,EAAKI,KAYlB,SACE,qBAAKI,IAAKC,EAAWC,IAAI,YCrJnC,I,EAAMC,EAAkB1B,IAAO2B,QAAV,yHAMfC,EAAgB5B,IAAOG,IAAV,8CAIb0B,EAAe7B,IAAOG,IAAV,iUAKF,SAACG,GAAD,OAAYA,EAAMwB,UAAY,OAAS,aAEjD,SAACxB,GAAD,OAAYA,EAAMwB,UAAY,cAAgB,aAa9CC,EAAe/B,IAAOG,IAAV,qLAUZ6B,EAAmBhC,IAAOiC,KAAV,kDAIhBC,EAAclC,IAAOG,IAAV,4TAoBXgC,EAAkBnC,IAAOoC,GAAV,wPAgBfC,EAAqBrC,IAAOG,IAAV,gFAKlBmC,EAAoBtC,IAAOuC,MAAV,mOAajBC,EAAYxC,IAAOa,OAAV,sVAkBA,SAAS4B,IAAY,IAAD,EACPC,mBAAS,CACjC,CAAEvB,GAAI,EAAGG,QAAS,qBAAOF,QAAQ,GACjC,CAAED,GAAI,EAAGG,QAAS,qBAAOF,QAAQ,KAHF,mBAC1BuB,EAD0B,KACnBC,EADmB,OAKPF,mBAAS,IALF,mBAK1BG,EAL0B,KAKnBC,EALmB,OAMSJ,mBAAS,OANlB,mBAM1BK,EAN0B,KAMXC,EANW,KAO7B7B,EAAK8B,iBAAO,GACZC,EAAkBP,EAAMQ,QAAO,SAACpC,GAAD,OAAWA,EAAKK,UAAQgC,OAE3D,SAASC,IACFR,IACLD,EAAS,CACP,CACEzB,GAAIA,EAAGmC,QACPhC,QAASuB,IAHL,mBAKHF,KAELG,EAAS,IACT3B,EAAGmC,WAEL,IAOMtC,EAAmB,SAACG,GACxByB,EAASD,EAAMQ,QAAO,SAACpC,GAAD,OAAUA,EAAKI,KAAOA,OAIxCF,EAAqB,SAACE,GAC1ByB,EACED,EAAMY,KAAI,SAACxC,GACT,OAAIA,EAAKI,KAAOA,EAAWJ,EAIpB,2BACFA,GADL,IAEEK,QAASL,EAAKK,cAYhBoC,EAAcC,mBAAQ,WAC1B,OAAOd,EAAMQ,QAAO,SAACpC,GACnB,MAAsB,QAAlBgC,IACqB,SAAlBA,EAA2BhC,EAAKK,QAAUL,EAAKK,aAEvD,CAACuB,EAAOI,IAKX,OACE,eAACrB,EAAD,WACE,eAACE,EAAD,WACE,cAACC,EAAD,CACER,QApBc,kBAAM2B,EAAiB,QAqBrClB,UAA6B,QAAlBiB,EAFb,0BAMA,cAAClB,EAAD,CACER,QAxBuB,kBAAM2B,EAAiB,eAyB9ClB,UAA6B,eAAlBiB,EAFb,gCAMA,cAAClB,EAAD,CACER,QA5Be,kBAAM2B,EAAiB,SA6BtClB,UAA6B,SAAlBiB,EAFb,mCAOF,eAAChB,EAAD,WACE,8BACE,cAACC,EAAD,UAAmBkB,IADrB,8BAGA,eAAChB,EAAD,CAAab,QA7BG,kBACpBuB,EAASD,EAAMQ,QAAO,SAACpC,GAAD,OAA0B,IAAhBA,EAAKK,YA4BjC,UACE,qBAAKG,IAAKmC,EAAUjC,IAAI,KAD1B,mDAKF,cAACU,EAAD,UACGqB,EAAYD,KAAI,SAACxC,GAAD,OACf,cAACD,EAAD,CAEEC,KAAMA,EACNC,iBAAkBA,EAClBC,mBAAoBA,GAHfF,EAAKI,SAOhB,eAACkB,EAAD,WACE,cAACC,EAAD,CACEqB,KAAK,OACLC,YAAY,4BACZf,MAAOA,EACPgB,SApFkB,SAACC,GAAD,OAAOhB,EAASgB,EAAEC,OAAOlB,QAqF3CmB,UAzFmB,SAACF,GACR,KAAdA,EAAEG,SAAgBZ,OA0FlB,cAACb,EAAD,CAAWnB,QA5FS,kBAAMgC,KA4F1B,qBCzOR,I,EAAMa,EAAYC,YAAH,+IAUA,SAASC,KACtB,OAAO,cAACF,EAAD,ICRT,IAAMG,GAAUrE,IAAOG,IAAV,iJAkBEmE,OATf,WACE,OACE,eAACD,GAAD,WACE,cAACD,GAAD,IACA,cAAC3B,EAAD,QCNS8B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.d051350b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/clear.32466c17.svg\";","export default __webpack_public_path__ + \"static/media/delete.89150e53.svg\";","import styled from \"styled-components\";\nimport DeleteImg from \"../images/delete.svg\";\nimport PropTypes from \"prop-types\";\n\nconst TodoItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 45px;\n  transition: 0.3s;\n\n  &:hover {\n    background-color: #f6f6f6;\n  }\n  &:hover Button {\n    opacity: 1;\n  }\n`;\n\nconst TodoItemContent = styled.div`\n  display: flex;\n  align-items: center;\n  width: calc(100% - 40px);\n  height: 100%;\n  color: #555555;\n`;\n\nconst TodoItemText = styled.label`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  transition: 0.3s;\n\n  input {\n    margin-right: 15px;\n  }\n\n  ${(props) =>\n    props.$isDone &&\n    `\n    text-decoration: line-through;\n    color: #E1E1E1;\n  `}\n`;\n\nconst TodoCheckbox = styled.div`\n  position: relative;\n  margin-right: 20px;\n  height: 10px;\n  width: 10px;\n  border: 1px solid #bbbbbb;\n  border-radius: 50%;\n  transition: 0.3s;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    left: 0.5px;\n    bottom: 4px;\n    transform: rotate(-50deg);\n    width: 15px;\n    height: 2px;\n    background-color: #858585;\n    opacity: 0;\n    transition: 0.3s;\n  }\n  &::after {\n    content: \"\";\n    position: absolute;\n    left: -2px;\n    bottom: 2px;\n    transform: rotate(45deg);\n    width: 7px;\n    height: 2px;\n    background-color: #858585;\n    opacity: 0;\n    transition: 0.3s;\n  }\n  ${(props) =>\n    props.$isDone &&\n    `\n    border: 1px solid transparent;\n\n    &::before {\n      opacity: 1;\n    }\n    \n    &::after {\n      opacity: 1;\n    }\n  `}\n`;\n\nconst TodoContent = styled.p`\n  word-break: break-word;\n  width: calc(100% - 32px);\n`;\n\nconst TodoButtonWrapper = styled.div`\n  display: flex;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 16px;\n  height: 16px;\n  outline: none;\n  border: transparent;\n  background-color: transparent;\n  opacity: 0;\n  transition: 0.3s;\n  cursor: pointer;\n\n  img {\n    width: 16px;\n    height: 16px;\n  }\n\n  & + & {\n    margin-left: 20px;\n  }\n\n  @media screen and (max-width: 768px) {\n    opacity: 1;\n  }\n`;\n\nexport default function SingleTodoItem({\n  todo,\n  handleDeleteTodo,\n  handleToggleIsDone,\n}) {\n  const handleToggleClick = () => {\n    handleToggleIsDone(todo.id);\n  };\n\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id);\n  };\n\n  return (\n    <TodoItem data-todo-id={todo.id}>\n      <TodoItemContent>\n        <TodoItemText $isDone={todo.isDone} onClick={handleToggleClick}>\n          <TodoCheckbox $isDone={todo.isDone} />\n          <TodoContent>{todo.content}</TodoContent>\n        </TodoItemText>\n      </TodoItemContent>\n      <TodoButtonWrapper>\n        <Button onClick={handleDeleteClick}>\n          <img src={DeleteImg} alt=\"\" />\n        </Button>\n      </TodoButtonWrapper>\n    </TodoItem>\n  );\n}\n\nSingleTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    isDone: PropTypes.bool,\n    content: PropTypes.string,\n  }),\n  handleDeleteTodo: PropTypes.func,\n  handleToggleIsDone: PropTypes.func,\n};\n","import styled from \"styled-components\";\nimport clearImg from \"../images/clear.svg\";\nimport { useState, useRef, useMemo } from \"react\";\nimport SingleTodoItem from \"./TodoItem\";\n\nconst TodoListWrapper = styled.section`\n  width: 100%;\n  background-color: #fff;\n  box-shadow: 0 0 50px rgba(135, 135, 135, 0.1);\n`;\n\nconst FilterWrapper = styled.div`\n  display: flex;\n`;\n\nconst FilterButton = styled.div`\n  width: calc(100% / 3);\n  line-height: 50px;\n  text-align: center;\n  color: #555555;\n  background: ${(props) => (props.$isActive ? \"#fff\" : \"#f9f9f9\")};\n  border-bottom: 1px solid\n    ${(props) => (props.$isActive ? \"transparent\" : \"#ececec\")};\n  transition: 0.3s;\n  cursor: pointer;\n\n  & + & {\n    border-left: 1px solid #ececec;\n  }\n\n  &:hover {\n    background-color: #fff;\n  }\n`;\n\nconst TodoItemInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 45px;\n  height: 75px;\n  font-size: 15px;\n  color: #858585;\n`;\n\nconst UncompletedCount = styled.span`\n  margin-right: 5px;\n`;\n\nconst ClearButton = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 5px 10px;\n  border: 1px solid #e1e1e1;\n  border-radius: 30px;\n  cursor: pointer;\n  transition: 0.3s;\n\n  &:hover {\n    background-color: #f9f9f9;\n  }\n\n  img {\n    margin-right: 5px;\n    width: 15px;\n    height: 15px;\n  }\n`;\n\nconst TodoItemWrapper = styled.ul`\n  margin: 0;\n  padding: 0;\n  max-height: 260px;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #e3e3e3;\n    border-radius: 20px;\n  }\n`;\n\nconst TodoItemInputField = styled.div`\n  display: flex;\n  border-top: 1px solid #ececec;\n`;\n\nconst TodoItemTextField = styled.input`\n  padding: 0 25px;\n  width: calc(100% - 60px);\n  border: transparent;\n  outline: none;\n  font-size: 20px;\n  color: #555555;\n\n  ::placeholder {\n    font-size: 20px;\n    color: #dcdcdc;\n  }\n`;\nconst AddButton = styled.button`\n  width: 60px;\n  height: 60px;\n  border: transparent;\n  border-left: 1px solid #ececec;\n  background-color: transparent;\n  color: #555555;\n  font-family: \"Microsoft JhengHei\";\n  font-size: 30px;\n  outline: none;\n  cursor: pointer;\n  transition: 0.3s;\n\n  &:hover {\n    background-color: #f9f9f9;\n  }\n`;\n\nexport default function TodoList() {\n  const [todos, setTodos] = useState([\n    { id: 1, content: \"已完成\", isDone: true }, // 內建第一筆資料\n    { id: 2, content: \"未完成\", isDone: false }, // 內建第二筆資料\n  ]);\n  const [value, setValue] = useState(\"\");\n  const [currentFilter, setCurrentFilter] = useState(\"all\");\n  let id = useRef(3); // 已經有內建 id: 2，所以初始值要從 3 開始\n  let uncompleteCount = todos.filter((todo) => !todo.isDone).length;\n\n  function SendTodoContent() {\n    if (!value) return; // 未輸入文字就不能送出\n    setTodos([\n      {\n        id: id.current,\n        content: value,\n      },\n      ...todos,\n    ]);\n    setValue(\"\"); // 做完就清空 setValue\n    id.current++;\n  }\n  const handleButtonClick = () => SendTodoContent();\n  const handleInputKeyDown = (e) => {\n    if (e.keyCode === 13) SendTodoContent();\n  };\n\n  const handleInputChange = (e) => setValue(e.target.value);\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n    // filter 只會留下符合條件的東西，而 todo.id 一定等於 id，這代表不會留下任何東西，即可達成刪除功能\n  };\n\n  const handleToggleIsDone = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo; // 如果這個 todo 不是要修改的 todo id 就回傳原本的 todo\n\n        // 進入這一行就代表是要修改的 todo.id\n        // 回傳原本的東西（...todo）+ 要修改的屬性（isDone: !todo.isDone）\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  };\n\n  const filterAllTodo = () => setCurrentFilter(\"all\");\n\n  const filterUncompeletedTodo = () => setCurrentFilter(\"uncomplete\");\n\n  const filterDoneTodo = () => setCurrentFilter(\"done\");\n\n  const filterTodos = useMemo(() => {\n    return todos.filter((todo) => {\n      if (currentFilter === \"all\") return true;\n      return currentFilter === \"done\" ? todo.isDone : !todo.isDone;\n    });\n  }, [todos, currentFilter]);\n\n  const clearDoneTodo = () =>\n    setTodos(todos.filter((todo) => todo.isDone !== true));\n\n  return (\n    <TodoListWrapper>\n      <FilterWrapper>\n        <FilterButton\n          onClick={filterAllTodo}\n          $isActive={currentFilter === \"all\"}\n        >\n          全部\n        </FilterButton>\n        <FilterButton\n          onClick={filterUncompeletedTodo}\n          $isActive={currentFilter === \"uncomplete\"}\n        >\n          未完成\n        </FilterButton>\n        <FilterButton\n          onClick={filterDoneTodo}\n          $isActive={currentFilter === \"done\"}\n        >\n          已完成\n        </FilterButton>\n      </FilterWrapper>\n      <TodoItemInfo>\n        <p>\n          <UncompletedCount>{uncompleteCount}</UncompletedCount>個未完成\n        </p>\n        <ClearButton onClick={clearDoneTodo}>\n          <img src={clearImg} alt=\"\" />\n          移除已完成事項\n        </ClearButton>\n      </TodoItemInfo>\n      <TodoItemWrapper>\n        {filterTodos.map((todo) => (\n          <SingleTodoItem\n            key={todo.id}\n            todo={todo}\n            handleDeleteTodo={handleDeleteTodo}\n            handleToggleIsDone={handleToggleIsDone}\n          />\n        ))}\n      </TodoItemWrapper>\n      <TodoItemInputField>\n        <TodoItemTextField\n          type=\"text\"\n          placeholder=\"Add something to do here?\"\n          value={value}\n          onChange={handleInputChange}\n          onKeyDown={handleInputKeyDown}\n        />\n        <AddButton onClick={handleButtonClick}>+</AddButton>\n      </TodoItemInputField>\n    </TodoListWrapper>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalCSS = createGlobalStyle`\n  body {\n    background-color: #EFF4F6;\n    font-family: 'Microsoft JhengHei';\n  }\n  p {\n    margin: 0;\n  }\n`;\n\nexport default function GlobalStyle() {\n  return <GlobalCSS />;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport TodoList from \"./TodoList\";\nimport GlobalStyle from \"./GlobalStyle\";\n\nconst Wrapper = styled.div`\n  margin: 100px auto 0 auto;\n  max-width: 550px;\n\n  @media screen and (max-width: 768px) {\n    width: 90%;\n  }\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <GlobalStyle />\n      <TodoList />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}